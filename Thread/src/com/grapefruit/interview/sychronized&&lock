


synchronized 和 lock 的区别

1 原始构成
    synchronized是关键字 属JVM层面
        monitorenter(底层通过monitor对象完成，其实是wait/notify等方法也依赖与monitor对象，只有在同步块或同步方法中才能调用wait/notify等方法)
        monitorexit
    Lock是具体类（java.util.concurrent.locks.lock）是api层面等锁

2 使用方法
    synchronized不需要用户手动释放锁，当synchronized代码执行完后系统会自动让线程释放对象的锁占用
    ReentrantLock则需要用户手动释放锁，若没有主动释放锁就有可能出现死锁
        需要lock()和unlock()方法配合try/finally语句块使用

3 等待是否可中断
synchronized不可中断，除非抛出异常或者正常运行
ReentrantLock可中断,1.设置超时方法 try(long timeout,TimeUnit unit)
                   2.lockInterruptibly()放代码块中，调用interrupt()方法中断
4.加锁是否公平
synchronized 非公平锁
ReentrantLock 默认非公平锁，构造方法传boolean值，true-》公平锁 false-》非公平锁

5. 锁绑定多个条件Condition
synchronized没有
ReentrantLock用来实现分组唤醒的线程(精确唤醒)，synchronized只能随机唤醒一个随机线程，要么唤醒全部。




